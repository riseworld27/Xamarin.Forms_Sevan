{"Name":"Ultimate SFTP for Mobile","Id":1580,"Alias":"UltimateSftp","Description":"Optimized for speed and minimal memory usage, the purely written in C# Ultimate SFTP component is proudly the best SFTP component for Xamarin Android, iOS and .NET Compact Framework. With just a few lines of code, your application is ready to connect, upload and download files and directories to and from the SFTP server.\n\nThe example below shows how to connect to an SFTP server and upload multiple files.\n\n\tusing ComponentPro.Net;\n\n\t...\n\n\t// Create a new instance.\n\tSftp client = new Sftp();\n\n\t// Connect to the SFTP server.\n\tclient.Connect(\"localhost\");\n\n\t// Authenticate.\n\tclient.Authenticate(\"test\", \"test\");\n\n\t// ... \n\t \n\t// Upload all files and subdirectories from local folder \u0027temp\u0027 to the remote dir \u0027/temp\u0027\n\tclient.UploadFiles(\"temp\", \"/temp\");\n\n\t// Upload all directories, subdirectories, and files that match the specified search pattern from local folder \u0027myfolder2\u0027 to remote folder \u0027/myfolder2\u0027.\n\tclient.UploadFiles(\"myfolder2\", \"/myfolder2\", \"*.cs\");\n\n\t// or you can simply put wildcard masks in the source path, our component will automatically parse it. \n\t// upload all *.css files from local folder \u0027myfolder2\u0027 to remote folder \u0027/myfolder2\u0027.\n\tclient.UploadFiles(\"myfolder2\\\\*.css\", \"/myfolder2\");\n\n\t// Upload *.cs and *.vb files from local folder \u0027myfolder2\u0027 to remote folder \u0027/myfolder2\u0027.\n\tclient.UploadFiles(\"myfolder2\\\\*.cs;*.vb\", \"/myfolder2\");\n\n\t// ... \n\t \n\t// Disconnect.\n\tclient.Disconnect();","Version":"6.1","Summary":"Fast and reliable SFTP component with intuitive API","QuickStart":"There are two Ultimate SFTP components for use with Xamarin, Ultimate SFTP for iOS and Ultimate SFTP for Android. Both use the same API.\n\nUltimate SFTP for .NET is a 100%-managed .NET class library that allows you to easily add SSH Secure File Transfer (SFTP) capabilities to your .NET and ASP.NET applications. It provides access to the complete functionality of the FTP protocol through a straightforward, intuitive object model. The library offers the flexibility, ease of use and rapid development features of a component without the complexities of working with the native socket class or in-depth knowledge of how the Secure File Transfer Protocols are implemented. It also provides a new way of working with files and folders based on ComponentPro\u0027s own powerful FileSystem classes. More flexible and object-oriented, this approach lets developers manipulate filesystem elements on the SFTP server just as easily as if they were local files and folders.\n\n## Generating your Trial License Key\nTo use the component, please generate your 30-day trial key at: (http://www.componentpro.com/download/trial.aspx?product=Sftp)\n\nThis document provides a short guide to getting started.\n\nXamarin.iOS\n-----------\n\n\u003cb\u003eUpload multiple files to an SFTP server in an iOS application\u003c/b\u003e \n\nIn this getting started example we\u0027ll connect to an SFTP server, authenticate the user and download files to the server.\n\n\tusing ComponentPro.Net;\n\tusing ComponentPro.IO;\n\n\t...\n\n\t// Create a new instance.\n\tSftp client = new Sftp();\n\n\t// Connect to the SFTP server.\n\tclient.Connect(\"myserver\");\n\n\t// Authenticate.\n\tclient.Authenticate(\"userName\", \"password\");\n\n\t// ... \n\t \n\t// Get all directories, subdirectories, and files from remote folder \u0027/myfolder\u0027 to \u0027c:\\myfolder\u0027.\n\tclient.DownloadFiles(\"/myfolder\", \"c:\\\\myfolder\");\n\n\t// Get all directories, subdirectories, and files that match the specified search pattern from remote folder \u0027/myfolder2\u0027 to \u0027c:\\myfolder2\u0027.\n\tclient.DownloadFiles(\"/myfolder2\", \"c:\\\\myfolder2\", \"*.cs\");\n\n\t// or you can simply put wildcard masks in the source path, our component will automatically parse it. \n\t// download all *.css files from remote folder \u0027/myfolder2\u0027 to local folder \u0027c:\\myfolder2\u0027.\n\tclient.DownloadFiles(\"/myfolder2/*.css\", \"c:\\\\myfolder2\");\n\n\t// Download *.cs and *.vb files from remote folder \u0027/myfolder2\u0027 to local folder \u0027c:\\myfolder2\u0027.\n\tclient.DownloadFiles(\"/myfolder2/*.cs;*.vb\", \"c:\\\\myfolder2\");\n\n\t// Get files in the folder \u0027/myfolder2\u0027 only.\n\tTransferOptions opt = new TransferOptions(true, RecursionMode.None, false, (SearchCondition)null, FileExistsResolveAction.OverwriteAll, SymlinksResolveAction.Skip);\n\tclient.DownloadFiles(\"/myfolder2\", \"c:\\\\myfolder2\", opt);\n\n\t// ... \n\t \n\t// Disconnect.\n\tclient.Disconnect();\n\n\nXamarin.Android\n---------------\n\n\u003cb\u003eDeleting remote directory on an SFTP server in an Android application\u003c/b\u003e \n\n\tusing System;\n\tusing ComponentPro;\n\tusing ComponentPro.IO;\n\tusing ComponentPro.Net;\n\n\t...\n\n\t// Create a new instance.\n\tSftp client = new Sftp();\n\n\t// Connect to the SFTP server.\n\tclient.Connect(\"localhost\");\n\n\t// Authenticate.\n\tclient.Authenticate(\"test\", \"test\");\n\n\t// ... \n\t \n\t// Remove an empty directory. If you wish to remove an entire directory, simply add a boolean value of true as the second parameter to the DeleteDirectoryAsync method. \n\tawait client.DeleteDirectoryAsync(\"/temp\");\n\n\t// ... \n\t \n\t// Remove all .tmp files recursively. Empty directories are to be removed as well. \n\tawait client.DeleteDirectoryAsync(\"/test\", true, \"*.tmp\");  \n\n\t// ... \n\t \n\t// Disconnect.\n\tclient.Disconnect();\n\n\n## Other Resources\n\n* [ComponentPro Support forums](http://www.componentpro.com/forums/)\n* [Product Documentation](http://www.componentpro.com/doc/sftp/)\n* [Product Page](http://www.componentpro.com/sftp.netcf/)\n","Hash":"f91cdbb1e7fb4f9bb5ea44c82c2ab556","TargetPlatforms":["ios","ios-unified","android"],"TrialHash":null}